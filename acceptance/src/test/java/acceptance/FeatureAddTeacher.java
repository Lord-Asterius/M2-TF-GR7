package acceptance;// Generated by Selenium IDE

import cucumber.api.java.en.And;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.htmlunit.HtmlUnitDriver;

import java.util.HashMap;
import java.util.Map;

import static acceptance.Utils.loginAdmin;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;


public class FeatureAddTeacher {
    private HtmlUnitDriver m_driver;
    private Map<String, Object> m_vars;
    private JavascriptExecutor m_js;
    
    @Given("^l'administrateur est connecté$")
    public void lAdministrateurEstConnecte() {
        m_driver = new HtmlUnitDriver();
        m_js = m_driver;
        m_vars = new HashMap<String, Object>();
        Utils.connectToSite(m_driver);
        loginAdmin(m_driver);
        m_driver.manage().window().setSize(new Dimension(1042, 709));
    }

    @And("^l'administrateur a renseigné les champs prénom, nom, mot de pass et date de naissance$")
    public void lAdministrateurARenseigneLesChampsPrenomNom() {
        m_driver.findElement(By.cssSelector("#moduleList > .nav-item:nth-child(3)")).click();
        m_driver.findElement(By.cssSelector(".float-right:nth-child(1)")).click();
        m_driver.findElement(By.name("first_name")).sendKeys("Aurore");
        m_driver.findElement(By.name("last_name")).sendKeys("Boréale");
        m_driver.findElement(By.id("exampleInputEmail1")).sendKeys("Aurore.Boreale@hotmail.com");
        m_driver.findElement(By.id("datepicker")).sendKeys("10/01/2020");
        m_driver.findElement(By.id("exampleInputPassword1")).sendKeys("Az12@4567");
    }

    @When("^l'administrateur tente d'ajouter le nouvel enseignant$")
    public void lAdminTenteDAjouterUnEnseignant() {
        m_driver.findElement(By.cssSelector(".btn-primary")).click();

    }

    @Then("^le nouvel enseignant est ajouté avec succès à la liste des étudiants$")
    public void leNouvelEnseigantEstAjouteAvecSucces() {
        assertThat(m_driver.findElement(By.cssSelector(".list-group-item:nth-child(3)")).getText(), is("Aurore Boréale"));
    }



    @And("^l'administrateur a renseigné les champs prénom, nom, mot de pass éronné et date de naissance$")
    public void lAdministrateurARenseigneLeMDPErrone () {
        m_driver.findElement(By.cssSelector("#moduleList > .nav-item:nth-child(3)")).click();
        m_driver.findElement(By.cssSelector(".float-right:nth-child(1)")).click();
        m_driver.findElement(By.name("first_name")).sendKeys("Aurore");
        m_driver.findElement(By.name("last_name")).sendKeys("Boréale");
        m_driver.findElement(By.id("exampleInputEmail1")).sendKeys("Aurore.Boreale@hotmail.com");
        m_driver.findElement(By.id("datepicker")).sendKeys("10/01/2020");
        m_driver.findElement(By.id("exampleInputPassword1")).sendKeys("1234");
    }

    @Then("^l'ajout doit échouer$")
    public void leNouvelEnseigantEstAjouteAvecNonSucces() {
        assertThat(m_driver.findElement(By.cssSelector(".toast-body")).getText(), is("Mot de pass : min 8 caracteres; au moins un nombre, une majuscule, minuscule et un caractere spécial."));
    }
    

}
